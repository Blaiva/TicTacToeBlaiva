@page "/"

@inject JugadoresService jugadoresService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Registro de Jugadores</PageTitle>
<div class="container">
	<div class="card shadow-lg">
		@*Header*@
		<div class="card-header text-center">
			<h5 class="card-title">Registro de Jugadores</h5>
		</div>

		@*Body*@
		<div class="card-body">

			@*Labels*@
			<div class="row">

				<div class="col-3">
					<label class="col-form-label"><strong>Filtrar por</strong></label>
				</div>

				<div class="col-4">
					<label class="col-form-label"><strong>B&uacute;squeda</strong></label>
				</div>

				<div class="col-5">
					<a href="/jugadores/create" class="btn btn-primary"> <span class="bi bi-plus-square mt-3"> </span> Crear</a>
				</div>

			</div>


			<div class="row align-items-center">
				@*Input Select*@
				<div class="col-3">
					<InputSelect class="form-select" @bind-Value="Filtro">
						<option value="" selected disabled>Elija una opci&oacute;n</option>
						<option value="Nombres">Nombres</option>
						<option value="Partidas">Partidas</option>
					</InputSelect>
				</div>
				@*Input Group*@
				<div class="col-4">
					<div class="input-group">
						<input class="form-control" @bind="ValorFiltro" placeholder="Buscar" />
						<button type="button" class="btn btn-outline-primary bi bi-search" @onclick="Buscar"></button>
					</div>
				</div>
			</div>
			@*Tabla*@
			<table class="table table-hover">
				<thead class="table table-striped text-black">
					<tr>
						<th>JugadorId</th>
						<th>Nombres</th>
						<th>Victorias</th>
						<th>Derrotas</th>
						<th>Empates</th>
						<th>Editar</th>
					</tr>
				</thead>
				<tbody>
					@foreach(var jugador in ListaJugadores)
					{
						<tr>
							<td>@jugador.JugadorId</td>
							<td>@jugador.Nombres</td>
							<td>@jugador.Victorias</td>
							<td>@jugador.Derrotas</td>
							<td>@jugador.Empates</td>

							<td>
								<a class="btn btn-outline-primary bi bi-pencil-square" href="/jugadores/edit/@jugador.JugadorId"></a>
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>

		@*Footer*@
		<div class="card-footer space-between">
			<label>Cantidad: @ListaJugadores.Count()</label>
		</div>
	</div>
</div>

@code {

	public List<Jugadores> ListaJugadores { get; set; } = new List<Jugadores>();

	public string Filtro { get; set; } = string.Empty;
	public string ValorFiltro { get; set; } = string.Empty;

	protected override async Task OnInitializedAsync()
	{
		ListaJugadores = await jugadoresService.Listar(criterio:j=>j.JugadorId > 0);
	}

	private async Task Buscar()
	{
		if (ValorFiltro.Trim() != "")
		{
			if (Filtro == nameof(Jugadores.Nombres))
			{
				ListaJugadores = await jugadoresService.Listar(criterio:j=>j.Nombres.ToLower().Contains(ValorFiltro.ToLower()));
			}
			else if (Filtro == nameof(Jugadores.Victorias))
			{
				ListaJugadores = await jugadoresService.Listar(criterio: j => j.Victorias.ToString().Equals(ValorFiltro));
			}
		}
		else
			ListaJugadores = await jugadoresService.Listar(criterio: j => j.JugadorId > 0);
	}
}
